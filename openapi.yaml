# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: 示例服务
    description: 示例服务
    contact:
        name: qi.zhou
    version: 2.0.1
paths:
    /example:
        get:
            tags:
                - ExampleService
            description: 列表
            operationId: ExampleService_GetExampleList
            parameters:
                - name: page
                  in: query
                  description: 主键id
                  schema:
                    type: integer
                    format: int64
                - name: pageSize
                  in: query
                  description: 页记录数
                  schema:
                    type: integer
                    format: int64
                - name: name
                  in: query
                  description: 名称
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetExampleListPageRes'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - ExampleService
            description: 更新
            operationId: ExampleService_UpdateExample
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateExampleReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CheckResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - ExampleService
            description: 创建
            operationId: ExampleService_CreateExample
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateExampleReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Example'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ExampleService
            description: 删除
            operationId: ExampleService_DeleteExample
            parameters:
                - name: id
                  in: query
                  description: 主键id
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CheckResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        Any:
            type: object
            properties:
                value:
                    $ref: '#/components/schemas/GoogleProtobufAny'
                yaml:
                    type: string
        CheckResponse:
            type: object
            properties:
                success:
                    type: boolean
            description: 响应 - 检查是否处理成功
        CreateExampleReq:
            type: object
            properties:
                name:
                    type: string
                    description: 名称
                status:
                    type: boolean
            description: 请求 - 创建
        Example:
            type: object
            properties:
                summary:
                    type: string
                description:
                    type: string
                value:
                    $ref: '#/components/schemas/Any'
                externalValue:
                    type: string
                specificationExtension:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedAny'
        GetExampleListPageRes:
            type: object
            properties:
                total:
                    type: integer
                    description: 总数
                    format: int64
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/Example'
                    description: 列表
            description: 响应 - 分页
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        NamedAny:
            type: object
            properties:
                name:
                    type: string
                    description: Map key
                value:
                    $ref: '#/components/schemas/Any'
            description: Automatically-generated message used to represent maps of Any as ordered (name,value) pairs.
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateExampleReq:
            type: object
            properties:
                id:
                    type: integer
                    description: 主键id
                    format: int64
                name:
                    type: string
                    description: 名称
                status:
                    type: boolean
                    description: 状态
            description: 请求 - 更新
tags:
    - name: ExampleService
